import java.util.*;
import java.io.*;

//useful website https://www.javacodeexamples.com/check-password-strength-in-java-example/668

class Main {

  public static String colorize(String text, String color){
    return color + text + ConsoleColors.RESET;
  }

  public static void clearScreen() { 
    System.out.print("\033[H\033[2J");
    System.out.flush(); 
 }

 public static void calculateScore(int point){
   //prints strength
   String strength = "";

    if(point < 50){
      strength = colorize("TOO SIMPLE", ConsoleColors.RED);
    }else if (point < 70){
      strength = colorize("Weak", ConsoleColors.RED);
    }else if (point < 90){
      strength = colorize("Fair", ConsoleColors.GREEN_BRIGHT);
    }else if (point < 120){
      strength = colorize("Strong", ConsoleColors.GREEN);
    }else{
      strength = colorize("Incredible", ConsoleColors.BLUE_BRIGHT);
    }
  System.out.format("\nTotal strength score: %s\nStrength Level: %s", colorize(String.valueOf(point), ConsoleColors.BLUE_BRIGHT), strength);
 }

  public static void main(String[] args) {
    //initialize
    Scanner scan = new Scanner(System.in);

    int point = 0;
    int length = 0;
    int countNum = 0;
    int countUpper = 0;
    int countLower = 0;
    int countSpecial = 0;

    clearScreen();



    System.out.print("Enter your password: ");
    String password = scan.nextLine();
    System.out.println();

    length = password.length();
    //System.out.println(length);





    for (char letter : password.toCharArray()) {

      //check for lowercase, uppercase, numbers, special characters
        
      if (letter <= 57 && letter >= 48) {
        point += 10; // number 0-9 is from 48 to 57
        countNum ++;
      } else if (letter <= 90 && letter >= 65) {
        point += 5; // uppercase A-Z from 65-90
        countUpper ++;
      } else if (letter <= 122 && letter >= 97) {
        point++; // lowercase a-z from 97-122
        countLower ++;
      } else if (letter == 32){
        //space can't be use in password
        System.out.println(colorize("YOU CAN'T USE SPACE IN THE PASSWORD",ConsoleColors.RED));
        System.exit(0);
      }else {
        point += 15; // special characters
        countSpecial ++;
      }      
    }




    //check common password
    boolean match = false;
    File passList = new File ("Dictionary.txt");
    try (Scanner myScan = new Scanner(passList)) {
      scan.useDelimiter("\n"); 
      
      while (myScan.hasNext()) {
        if (password.equals(myScan.next()) ) {
          match = true; 
          break; 
        } 
      }
    } catch (IOException mem) {
      mem.printStackTrace();
    }

    //length calculation add point if length is long
    point = point + (3 * length);

    //print results
    if (countNum >= 3){
      System.out.println(colorize("You have at least 3 numbers",ConsoleColors.GREEN));
    } else {
      System.out.println(colorize("You have less than 3 numbers",ConsoleColors.RED));
    }

    if (countUpper >= 1){
      System.out.println(colorize("You have at least 1 Uppercase",ConsoleColors.GREEN));
    } else {
      System.out.println(colorize("Please put at least one Uppercase",ConsoleColors.RED));
    }

    if (countLower >= 5){
      System.out.println(colorize("You have at least 5 Lowercase",ConsoleColors.GREEN));
    } else {
      System.out.println(colorize("Please put more lowercase characters",ConsoleColors.RED));
    }

    if (countSpecial >= 1){
      System.out.println(colorize("You have at least 1 special character",ConsoleColors.GREEN));
    } else {
      System.out.println(colorize("Recommed that you use at least one special charcater",ConsoleColors.RED));
    }

    if (match == true){
      System.out.println(colorize("Your password is common in the dictionary.", ConsoleColors.RED));
      point -= 50;
    }else{
      System.out.println(colorize("Your password is unique",ConsoleColors.GREEN));
      point = point * 2;
    }
    
    calculateScore(point);

    scan.close();
  
 }
 
}